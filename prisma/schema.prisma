// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
  previewFeatures = ["referentialActions"]
}

model User {
  id    Int     @id @default(autoincrement())
  email String  @unique
  name  String
  password String
  is_admin Boolean @default(false)
  salt String @default("")
}

model Member {
  id        Int     @id @default(autoincrement())
  name      String
  info      String 
  imageUrl  String
  contacts  Contact[]
  periods   PeriodMember[]
  news      News[]                                                          // fields used to generate Prisma Client
}

model Contact {
  id    Int  @id @default(autoincrement())
  owner Member @relation(fields: [ownerId], references: [id], onDelete: Cascade)
  ownerId Int
  type PageType
  url   String
}

enum PageType {
  GITHUB
  LINKEDIN
  MEDIUM
  EMAIL
}

model Period {
  id        Int     @id @default(autoincrement())
  generation Int
  members   PeriodMember[]
}

model PeriodMember {
  role      RoleType
  member       Member     @relation(fields: [memberId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  memberId     Int 
  period   Period @relation(fields: [periodId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  periodId Int 
  @@id([memberId, periodId])
}

enum RoleType {
  PRESIDENT
  VICE_PRESIDENT
  MEDIA_LEAD
  MANAGER
  MEMBER
  MENTOR
}

model News {
  id        Int       @id @default(autoincrement())
  title     String
  member    Member    @relation(fields: [memberId], references: [id])       // fields used to generate Prisma Client
  memberId  Int                                                             // foreign key in database
  datetime  DateTime  @default(now())
  summary   String
  link      String
  image_url  String
  is_disclosed Boolean
}

model DeferenceImage {
  id                Int               @id @default(autoincrement())
  type              String
  image_url         String
  deference         Deference         @relation(fields: [deferenceId], references: [id])
  deferenceId       Int
}

model Deference {
  id                Int               @id @default(autoincrement())
  year              Int       
  deferenceImage    DeferenceImage[]  
}