# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type UserResponse {
  id: Float!
  email: String!
  name: String!
  is_admin: Boolean!
  token: String!
}

type Period {
  id: Int!
  generation: Float!
  memberId: [Member!]!
}

type PeriodMember {
  id: Int!
  role: String!
  member: Member!
  period: Period!
}

type Contact {
  id: Int!
  ownerId: Int
  type: String
  url: String
}

type Member {
  id: Int!
  name: String!
  info: String!
  imageUrl: String!
  contacts: [Contact!]
  periods: [PeriodMember!]
}

type ProjectMember {
  id: Int!
  member: Member!
  project: Project!
  role: Float!
}

type Project {
  id: Int!
  period: Period!
  name: String!
  url: [ProjectUrl!]!
  summary: String!
  imageUrl: String!
  members: [ProjectMember!]!
}

type ProjectUrl {
  type: String!
  url: String!
}

type Query {
  signinUser(data: UserSigninInput!): UserResponse!
  findUsers(data: UsersFindInput!): [UserResponse!]
  findUser(data: UserFindInput!): UserResponse
  member(memberFindByIdInput: MemberFindByIdInput!): Member!
  members(memberFindManyInput: MemberFindManyInput!): [Member!]!
  periodMembers(periodFindInput: PeriodFindInput!): [PeriodMember!]!
  project(projectUniqueInput: ProjectUniqueInput!): Project!
  projects(projectFindManyInput: ProjectFindManyInput!): [Project!]!
}

input UserSigninInput {
  email: String!
  password: String!
}

input UsersFindInput {
  orderBy: String
}

input UserFindInput {
  id: Float!
  email: String
  name: String
}

input MemberFindByIdInput {
  id: Int!
}

input MemberFindManyInput {
  orderBy: String
}

input PeriodFindInput {
  id: Int
  generation: Int
}

input ProjectUniqueInput {
  id: Int!
}

input ProjectFindManyInput {
  orderBy: String
}

type Mutation {
  signupUser(data: UserSignupInput!): UserResponse!
  createMember(memberCreateInput: MemberCreateInput!): Member!
  updateMember(memberUpdateInput: MemberUpdateInput!): Member!
  deleteMember(memberDeleteInput: MemberDeleteInput!): Member!
  createPeriod(periodGenerationInput: PeriodGenerationInput!): Period!
  createPeriodMember(periodMemberCreateInput: PeriodMemberCreateOrUpdateInput!): PeriodMember!
  updatePeriodMember(periodMemberUpdateInput: PeriodMemberCreateOrUpdateInput!): PeriodMember!
  deletePeriodMember(periodMemberUniqueInput: PeriodMemberUniqueInput!): PeriodMember!
  createProject(projectInput: ProjectInput!): Project!
  updateProject(projectUpdateInput: ProjectUpdateInput!): Project!
  deleteProject(projectUniqueInput: ProjectUniqueInput!): Project!
}

input UserSignupInput {
  email: String!
  name: String!
  password: String!
}

input MemberCreateInput {
  name: String!
  info: String!
  imageUrl: String!
  contacts: ContactCreateOrConnectInput
}

input ContactCreateOrConnectInput {
  create: [ContactCreateInput!]
  connect: [ContactConnectInput!]
}

input ContactCreateInput {
  type: String!
  url: String!
}

input ContactConnectInput {
  id: Int!
}

input MemberUpdateInput {
  id: Int!
  data: MemberUpdateData!
}

input MemberUpdateData {
  name: String
  info: String
  imageUrl: String
  contacts: ContactCreateOrConnectInput
}

input MemberDeleteInput {
  id: Int!
}

input PeriodGenerationInput {
  generation: Int!
}

input PeriodMemberCreateOrUpdateInput {
  role: String!
  memberId: Int!
  periodId: Int!
}

input PeriodMemberUniqueInput {
  memberId: Int!
  periodId: Int!
}

input ProjectInput {
  name: String!
  periodId: Int!
  url: [ProjectUrlInput!]!
  summary: String!
  imageUrl: String!
  members: [ProjectMemberInput!]!
}

input ProjectUrlInput {
  type: String!
  url: String!
}

input ProjectMemberInput {
  role: String!
  memberId: Int!
}

input ProjectUpdateInput {
  id: Int!
  data: ProjectInput
}
