# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type UserResponse {
  id: Float!
  email: String!
  name: String!
  is_admin: Boolean!
  token: String!
}

type NewsResponse {
  id: Int!
  title: String!
  member: Member!
  datetime: DateTime!
  summary: String!
  link: String!
  imageUrl: String!
  isDisclosed: Boolean!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Period {
  id: Int!
  generation: Float!
  memberId: [Member!]!
}

type PeriodMember {
  id: Int!
  role: String!
  member: Member!
  period: Period!
}

type Contact {
  id: Int!
  ownerId: Int
  type: String
  url: String
}

type Member {
  id: Int!
  name: String!
  info: String!
  imageUrl: String!
  news: [NewsResponse!]
  contacts: [Contact!]
  periods: [PeriodMember!]
}

type DeferenceImageResponse {
  id: Int!
  type: String!
  imageUrl: String!
}

type DeferenceResponse {
  id: Int!
  year: Int!
  deferenceImage: [DeferenceImageResponse!]
}

type Query {
  signinUser(data: UserSigninInput!): UserResponse!
  findUsers(data: UsersFindInput!): [UserResponse!]
  findUser(data: UserFindInput!): UserResponse
  member(memberFindByIdInput: MemberFindByIdInput!): Member!
  members(memberFindManyInput: MemberFindManyInput!): [Member!]!
  periodMembers(periodFindInput: PeriodFindInput!): [PeriodMember!]!
  getNewsById(id: Float!): NewsResponse
  getAllNews(FindManyNewsInput: FindManyNewsInput!): [NewsResponse!]!
  getDeferenceById(id: Float!): DeferenceResponse
  getDeferences: [DeferenceResponse!]!
}

input UserSigninInput {
  email: String!
  password: String!
}

input UsersFindInput {
  orderBy: String
}

input UserFindInput {
  id: Float!
  email: String
  name: String
}

input MemberFindByIdInput {
  id: Int!
}

input MemberFindManyInput {
  orderBy: String
}

input PeriodFindInput {
  id: Int
  generation: Int
}

input FindManyNewsInput {
  offset: Int
  page: Int
}

type Mutation {
  signupUser(data: UserSignupInput!): UserResponse!
  createMember(memberCreateInput: MemberCreateInput!): Member!
  updateMember(memberUpdateInput: MemberUpdateInput!): Member!
  deleteMember(memberDeleteInput: MemberDeleteInput!): Member!
  createPeriod(periodGenerationInput: PeriodGenerationInput!): Period!
  createPeriodMember(periodMemberCreateInput: PeriodMemberCreateOrUpdateInput!): PeriodMember!
  updatePeriodMember(periodMemberUpdateInput: PeriodMemberCreateOrUpdateInput!): PeriodMember!
  deletePeriodMember(periodMemberUniqueInput: PeriodMemberUniqueInput!): PeriodMember!
  createNews(createNewsInput: CreateNewsInput!): NewsResponse!
  updateNews(updateNewsInput: UpdateNewsInput!): NewsResponse!
  deleteNews(id: Float!): NewsResponse!
  createDeference(createDeferenceInput: CreateDeferenceInput!): DeferenceResponse!
  updateDeference(updateDeferenceInput: UpdateDeferenceInput!): DeferenceResponse!
  deleteDeference(id: Float!): DeferenceResponse!
}

input UserSignupInput {
  email: String!
  name: String!
  password: String!
}

input MemberCreateInput {
  name: String!
  info: String!
  imageUrl: String!
  contacts: ContactCreateOrConnectInput
}

input ContactCreateOrConnectInput {
  create: [ContactCreateInput!]
  connect: [ContactConnectInput!]
}

input ContactCreateInput {
  type: String!
  url: String!
}

input ContactConnectInput {
  id: Int!
}

input MemberUpdateInput {
  id: Int!
  data: MemberUpdateData!
}

input MemberUpdateData {
  name: String
  info: String
  imageUrl: String
  contacts: ContactCreateOrConnectInput
}

input MemberDeleteInput {
  id: Int!
}

input PeriodGenerationInput {
  generation: Int!
}

input PeriodMemberCreateOrUpdateInput {
  role: String!
  memberId: Int!
  periodId: Int!
}

input PeriodMemberUniqueInput {
  memberId: Int!
  periodId: Int!
}

input CreateNewsInput {
  title: String!
  memberId: Int!
  summary: String!
  link: String!
  imageUrl: String!
  isDisclosed: Boolean!
}

input UpdateNewsInput {
  id: Int!
  title: String!
  memberId: Int!
  summary: String!
  link: String!
  imageUrl: String!
  isDisclosed: Boolean!
}

input CreateDeferenceInput {
  year: Int!
  deferenceImage: [CreateDeferenceImageInput!]
}

input CreateDeferenceImageInput {
  type: String!
  imageUrl: String!
}

input UpdateDeferenceInput {
  id: Int!
  year: Int!
  deferenceImage: UpdateDeferenceImageInput
}

input UpdateDeferenceImageInput {
  id: Int!
  type: String!
  imageUrl: String!
}
